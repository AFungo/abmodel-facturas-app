/*S
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import builder.Builder;
import builder.BuilderFactory;
import loader.SectorLoader;
import models.ModelEnum;
import models.Sector;
import utils.AutoSuggestor;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import database.SectorDAO;
import views.utils.ViewMediator;

/**
 *
 * @author agustinnolasco
 */
public class SectorsView extends javax.swing.JFrame {
    /**
     * Creates new form SectorsView
     */
    public SectorsView(ViewMediator viewMediator) {
        initComponents();
        this.viewMediator = viewMediator;
        sectorsAutoSuggestor = new AutoSuggestor(sectorsComboBox, viewMediator.getSectorsName());
        sectorsAutoSuggestor.autoSuggest();
        viewMediator.getAutoSuggestorManager().registerSectorAutoSuggestor(sectorsAutoSuggestor);
    }
         
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addSector = new javax.swing.JButton();
        deleteSector = new javax.swing.JButton();
        sectorsComboBox = new javax.swing.JComboBox<>();
        updateSector = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("RUBROS");
//        setIconImage(new ImageIcon(getClass().getResource("/resources/images/icono-facturas-app-opcion-dos.png")).getImage()
//        );

        addSector.setText("Agregar");
        addSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSectorActionPerformed(evt);
            }
        });

        deleteSector.setText("Borrar");
        deleteSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSectorActionPerformed(evt);
            }
        });

        updateSector.setText("Actualizar");
        updateSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSectorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(addSector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(updateSector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(deleteSector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sectorsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(sectorsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSector)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteSector)
                        .addComponent(updateSector)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSectorActionPerformed
        String newSector = sectorsAutoSuggestor.getText();
        if (!newSector.trim().isEmpty() && !SectorDAO.getInstance().getAll().stream().anyMatch(s -> s.getValues().get("name").equals(newSector))) {
            Builder sectorBuilder = BuilderFactory.create(ModelEnum.SECTOR);
            Sector sector = (Sector) sectorBuilder.build(newSector);
            SectorLoader loader = new SectorLoader();
            loader.load(sector);
            viewMediator.updateSectorSuggestions();
            sectorsAutoSuggestor.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "El rubro ingresado es vacio o ya existe",
                    "Rubto invalido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addSectorActionPerformed

    private void deleteSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSectorActionPerformed
        String sector = sectorsAutoSuggestor.getText();
        if (sector != null && SectorDAO.getInstance().getAll().stream().anyMatch(s -> s.getValues().get("name").equals(sector))){
            int userInput = JOptionPane.showConfirmDialog(this, 
                    "Â¿Seguro que desea eliminar el rubro " + sector + "?", 
                    "Confirmacion", 0, 2
            );
            if (userInput == 0) {
                SectorDAO.getInstance().delete(SectorDAO.getInstance().getAll().stream().filter(s -> s.getValues().get("name").equals(sector)).findFirst().get());
                viewMediator.updateSectorSuggestions();
                sectorsAutoSuggestor.setText("");
            }
        }
    }//GEN-LAST:event_deleteSectorActionPerformed

    private void updateSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSectorActionPerformed
        String userInput = JOptionPane.showInputDialog(this, "Nuevo nombre: ", "");
        if (userInput != null && sectorsAutoSuggestor.getText() != null) {
            throw new UnsupportedOperationException("TODO: Implement");
            /* 
            Filter filter = new Filter();
            filter.add("sector", "=", sectorsAutoSuggestor.getText(), String.class);
            SectorDAO.add(userInput);
            WithholdingDAO.update(filter, "sector", userInput, true);
            ProviderDAO.update(filter, "sector", userInput);
            SectorDAO.remove(sectorsAutoSuggestor.getText());
            sectorsAutoSuggestor.setText("");
            updateSuggestions();
            */
        }
    }//GEN-LAST:event_updateSectorActionPerformed

    private ViewMediator viewMediator;
    private AutoSuggestor sectorsAutoSuggestor;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSector;
    private javax.swing.JButton deleteSector;
    private javax.swing.JComboBox<String> sectorsComboBox;
    private javax.swing.JButton updateSector;
    // End of variables declaration//GEN-END:variables
}
